#!/usr/bin/python
# encoding=UTF-8

# Copyright Â© 2008
#   Piotr Lewandowski <piotr.lewandowski+sinntp@gmail.com>,
#   Jakub Wilk <ubanus@users.sf.net>.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

'''
Usage:
    sinntp groupname [groupname ...]
'''

__author__ = ('Jakub Wilk', 'Piotr Lewandowski')
__version__ = '0.100'

from nntplib import NNTP, NNTPTemporaryError
import errno
import os
import re
import socket
import sys
import time

def escape_from(line):
    if re.search(r'^>*From ', line):
        return '>' + line
    return line

class Config(object):

    def __init__(self, hostname):
        self._hostname = hostname
        self._root = os.getenv('SINNTP_HOME') or '.'
        os.chdir(self._root)

    def _get_file_name(self, name):
        base_name = '%s@%s' % (name, self._hostname)
        return os.path.join(self._root, base_name)

    def __getitem__(self, name):
        try:
            file = open(self._get_file_name(name), 'rb')
        except IOError, ex:
            if ex.errno == errno.ENOENT:
                return 0
            raise
        try:
            return int(file.read())
        finally:
            file.close()

    def __setitem__(self, name, value):
        file = open(self._get_file_name(name), 'wb')
        try:
            file.write(str(value))
        finally:
            file.close()

class Connection(NNTP):
    def fetch(self, group_name, start = 0):
        response, count, first, last, name = self.group(group_name)
        count, first, last = (int(x) for x in (count, first, last))
        i = max(start, first)
        while i <= last:
            try:
                self.stat(str(i))
            except NNTPTemporaryError, e:
                i += 1
            else:
                break
        else:
            print >>sys.stderr, 'Nothing to fetch.'
            return
        no = str(i)
        while 1:
            _, _, _, body = self.article(no)
            print 'From %s  %s' % ('sinntp@localhost', time.ctime(time.time()))
            print 'Status: '
            for line in body:
                print escape_from(line)
            print
            try:
                _, no, _ = self.next()
            except NNTPTemporaryError, ex:
                if ex.response.startswith('421'):
                    break
                raise
        return int(no)

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print >>sys.stderr, __doc__
        sys.exit(1)
    groups = sys.argv[1:]
    host = os.getenv('NNTPSERVER') or file('/etc/news/server').readline().strip()

    if not host:
        print >>sys.stderr, 'NNTP server is not specified.'
        sys.exit(2)

    config = Config(host)
    try:
        connection = Connection(host)
    except socket.error, e:
        print >>sys.stderr, 'Could not connect to \'%s\': %s' % (host, e[1])
        sys.exit(3)
    try:
        for group in groups:
            no = connection.fetch(group, start=config[group])
            if no is not None:
                config[group] = no + 1
    finally:
        connection.quit()

# vim:ts=4 sw=4 et
